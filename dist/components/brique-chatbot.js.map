{"version":3,"file":"brique-chatbot.js","sourceRoot":"","sources":["../../src/components/brique-chatbot.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { NavController, NavParams, Content } from 'ionic-angular';\nimport { BRIQUEChatProvider } from '../providers/chat-provider';\nimport { MdlChatBlock } from './chat-block';\n// import { CMPChatAction } from './chat-action';, MdlChatMessage\n\nconst HTML_TEMPLATE = `\n<ion-header>\n\t<ion-navbar>\n\t\t<ion-title>\n\t\t\t{{ chatbotName }}\n\t\t</ion-title>\n\t</ion-navbar>\n</ion-header>\n<ion-content #content no-padding>\n\t<div class=\"chatbot-container\">\n\t\t<div #list class=\"list chatbot-direct-chat-messages\" [scrollTop]=\"list.scrollHeight\">\n\t\t\t<ng-template ngFor let-chatMessage [ngForOf]=\"chatMessages\">\n\t\t\t\t<div col-10 class=\"bubble-container\" *ngIf=\"chatMessage.sender == 1\">\n\t\t\t\t\t<div class=\"white-bubble\"><div class=\"bubble-content\"><span>{{ chatMessage.title }}</span></div></div>\n\t\t\t\t</div>\n\t\t\t\t<div offset-2 no-padding *ngIf=\"chatMessage.sender == 2\">\n\t\t\t\t\t<div class=\"blue-bubble\"><div class=\"bubble-content\">\n\t\t\t\t\t\t<ul><li class=\"mini_label\" *ngIf=\"chatMessage.label != null && chatMessage.label !== undefined\">{{ chatMessage.label }}</li><li>{{ chatMessage.title }}</li></ul>\n\t\t\t\t\t</div></div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"clearfix\"></div>\n\t\t\t</ng-template>\n\t\t\t<div class=\"clearfix\"></div>\n\t\t\t<div col-10 class=\"bubble-container\" *ngIf=\"showWave == true\">\n\t\t\t\t<div class=\"white-bubble\"><div class=\"bubble-content\">\n\t\t\t\t\t<div id=\"wave\"><span class=\"dot\"></span><span class=\"dot\"></span><span class=\"dot\"></span></div>\n\t\t\t\t</div></div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"chatbot-footer\">\n\t\t\t<div class=\"chatbot-action-container\" *ngIf=\"chatbotActions.length > 0\">\n\t\t\t\t<ul class='__exit-buttonsInline'>\n\t\t\t\t\t<li *ngFor=\"let chatbotAction of chatbotActions\"><a href=\"#\" class=\"__chatbot-action-button\" (click)=\"optionClick(chatbotAction);\">{{ chatbotAction.title }}</a></li>\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t\t<div class=\"chatbot-form-element-container\" *ngIf=\"currentInput != null && currentInput !== undefined\">\n\t\t\t\t<div *ngIf=\"currentInput.type == '51'\">\n\t\t\t\t\t<ion-textarea rows=\"1\" autosize [(ngModel)]=\"currentInputResult\"></ion-textarea>\n\t\t\t\t\t<button ion-button full col-3 color=\"default\" class=\"btn-send\" (click)=\"postInputData();\"><ion-icon name=\"send\"></ion-icon></button>\n\t\t\t\t</div>\n\t\t\t\t<div *ngIf=\"currentInput.type == '53'\">\n\t\t\t\t\t<ion-label>{{ currentInputResult }}</ion-label>\n\t\t\t\t\t<ion-range col-9 min=\"{{ currentInput.min }}\" max=\"{{ currentInput.max }}\" step=\"{{ currentInput.step }}\" snaps=\"true\" color=\"secondary\" [(ngModel)]=\"currentInputResult\"></ion-range>\n\t\t\t\t\t<button col-3 (click)=\"postInputData();\">Send</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</ion-content>\n`;\n\nconst CHATBOT_CSS = `\n.clearfix::after {\ncontent: \"\";\nclear: both;\ndisplay: table;\n}\n.chatbot-container{\ndisplay: flex;\nflex-direction: column;\nheight: 100%;\n}\nion-content{\nbackground-color: #f3f3f3;\n}\n.chatbot-direct-chat-messages {\noverflow: auto;\npadding: 10px;\nflex-grow: 1;\n}\n.chatbot-footer{\nwidth: 100%;\n}\n.bubble-container{\ndisplay: block;\npadding: 0;\n}\n.white-bubble, .blue-bubble {\nbackground-color: #fff;\nfont-size: 15px;\nborder-top-left-radius: 0em;\nborder-top-right-radius: 0.5em;\nborder-bottom-left-radius: 0.5em;\nborder-bottom-right-radius: 0.5em;\nbox-shadow: 0 0.4px 0.2px rgba(0,0,0,0.35);\n-webkit-box-shadow: 0 0.4px 0.2px rgba(0,0,0,0.35);\nwidth: auto;\ndisplay: inline-block;\nfloat: left;\npadding-left: 0px;\nmargin: 0px 0px 4px 0px;\n}\n.blue-bubble {\nbackground-color: #0084ff;\nborder-top-left-radius: 0.5em;\nborder-top-right-radius: 0em;\nfloat: right;\ncolor: #fff;\nmargin: 0px 0px 5px 0px;\n}\n.bubble-content {\npadding: 10px;\ndisplay: flex;\nflex-grow: 1;\n}\n.blue-bubble ul{\nmargin: 0; padding: 0;list-style: none;\n}\n.mini_label{\nfont-size: 12px;margin-bottom: 3px;\n}\n.btn-inapp {\nmargin: 0 !important;\ncolor: #656565;\n}\n.form-content {\npadding: 10px;\ndisplay: flex;\nflex-grow: 1;\n}\n.form-content ion-label {\ncolor: #000 !important;\nfont-size: 16px !important;\n}\n.nonfix {\ntext-align: center;\nmargin: 0 auto;\n}\n.chatbot-action-container{\ntext-align: center;\npadding: 0 10px;\nposition:relative;\n}\n.__exit-buttonsInline {\nlist-style-type: none;\npadding-left: 0px;\nmargin: 10px 0;\n}\n.__exit-buttonsInline li {\ndisplay: inline-flex;\nmargin: 0 3px 3px;\n}\n.__exit-buttonsInline li a {\ntext-decoration: none;\nbackground-color: #ff4d72;\ncolor: #fff;\npadding: 8px 15px;\nfont-size: 15px;\nfont-weight: bold;\ndisplay: block;\nwidth: auto;\nborder-top-left-radius: 0.2em;\nborder-top-right-radius: 1.3em;\nborder-bottom-left-radius: 1.3em;\nborder-bottom-right-radius: 1.3em;\nbox-shadow: 0 0.4px 0.2px rgba(0,0,0,0.25);\n}\ndiv#wave {\nposition: relative;\nmargin-top: 0vh;\ntext-align: center;\nwidth: 50px;\n/* height: 50px; */\nmargin-left: auto;\nmargin-right: auto;\n}\ndiv#wave .dot {\ndisplay: inline-block;\nwidth: 5px;\nheight: 5px;\nborder-radius: 50%;\nmargin-right: 3px;\nbackground: #303131;\nanimation: wave 1.3s linear infinite;\n}\ndiv#wave .dot:nth-child(2) {\nanimation-delay: -1.1s;\n}\ndiv#wave .dot:nth-child(3) {\n  animation-delay: -0.9s;\n}\n@keyframes wave {\n\t0%, 60%, 100% {\n\t\ttransform: initial;\n\t}\n\t30% {\n\t\ttransform: translateY(-10px);\n\t}\n}\n`;\n@Component({\n\t// selector: 'brique-chatbot',\n\ttemplate: HTML_TEMPLATE,\n\tstyles: [CHATBOT_CSS],\n\tproviders: [ BRIQUEChatProvider ]\n})\nexport class BRIQUEChatbot {\n\n\t@ViewChild(Content) contentArea: Content;\n\t@ViewChild('list') messagesList: ElementRef;\n\t// // @ViewChild(List, {read: ElementRef}) chatList: ElementRef;\n \t// private mutationObserver: MutationObserver;\n\n\tcustomerCode: string;\n\tbotCode: string;\n    apiEndpoint: string;\n\n\tinitiateEndpoint: string;\n    initiateResponse: string;\n\n\tpostRouteResponseEndpoint: string;\n\tpostRRResponse: string;\n\n\tpostSubjectSelectionEndpoint: string;\n\tpostSSResponse: string;\n\n\t// These are the most important blocks\n\tchatbotName: string;\n\n\tcurrentBlock: MdlChatBlock;\n\tcurrentBlockMessages: any[] = [];\n\tchatMessages: any[] = [];\n\tchatbotActions: any[] =[];\n\tshowWave: boolean = true;\n\tcurrentInput: any = null;\n\tcurrentInputResult: any = null;\n\n\t//\n\texitMessage={};\n\tcurrentBlockMessageIndex=0;\n\tsubjects=[];\n\n\tcurrentSelection=1;\n\tchatbotImage = \"\";\n\n\tconstructor(private navCtrl: NavController,\n        private navParams:NavParams,\n        private chatProvider: BRIQUEChatProvider) {\n\t\t\tthis.customerCode \t= this.navParams.get(\"customerCode\");\n\t\t\tthis.botCode \t\t= this.navParams.get(\"botCode\");\n\t        this.apiEndpoint\t= this.navParams.get(\"apiEndpoint\");\n\t        if( this.customerCode == null || this.customerCode === undefined || this.customerCode.trim().length == 0 ||\n\t            this.botCode == null || this.botCode === undefined || this.botCode.trim().length == 0 ||\n\t            this.apiEndpoint == null || this.apiEndpoint === undefined || this.apiEndpoint.trim().length == 0 )\n\t            throw new Error(\"Improper Chatbot registration. Please provide the customer code, bot code and the endpoint URL.\");\n\t\t\tthis.registerChatbot();\n\t}\n\n    // Call to register the chatbot\n\tprivate registerChatbot(){\n\t\tconsole.log(\"Call to register the chatbot\");\n\t\tthis.initiateChat();\n\t}\n\n\t// Reset the blocks\n\tprivate resetBlocks(){\n\t\tthis.currentBlock = null;\n\t\tthis.currentInput = null;\n\t\tthis.exitMessage={};\n\t\tthis.currentBlockMessageIndex=0;\n\t\tthis.chatbotActions = [];\n\t}\n\n    // Call to initiate the chat\n\tprivate initiateChat(){\n\t\t// console.log(\"Call to initiate the chat\");\n\t\tthis.chatProvider.initiateChat(this.customerCode, this.botCode, this.apiEndpoint).then(data=>{\n            // console.log(\"Got the data from the server.\");\n            console.log(data);\n\t\t\tthis.resetBlocks();\n\t\t\tif( data.hasOwnProperty(\"chatbot\") && data[\"chatbot\"] != null && data[\"chatbot\"] !== undefined ){\n\t\t\t\tlet chatbot = data[\"chatbot\"];\n\t\t\t\tthis.chatbotName = chatbot[\"bot_name\"];\n\t\t\t}\n\t\t\tif( data.hasOwnProperty(\"greeting\") && data[\"greeting\"] != null && data[\"greeting\"] !== undefined ){\n\t\t\t\tlet greeting = data[\"greeting\"];\n\t\t\t\tif( greeting.hasOwnProperty(\"block\") && greeting[\"block\"] != null && greeting[\"block\"] !== undefined ){\n\t\t\t\t\tthis.extractResponse(greeting);\n\t\t\t\t}\n\t\t\t\t// PENDING: need to take a good look at this\n\t\t\t\tif( greeting.hasOwnProperty(\"subjects\") && greeting[\"subjects\"] != null && greeting[\"subjects\"] !== undefined ){\n\t\t\t\t\tthis.subjects = greeting[\"subjects\"];\n\t\t\t\t}\n\t\t\t}\n        });\n\t}\n\n\t// Extract the response\n\tprivate extractResponse(_data){\n\t\tthis.currentBlock = new MdlChatBlock(_data[\"block\"]);\n\t\tthis.currentInput = null;\n\t\tthis.currentBlockMessages = this.currentBlock.messages;\n\t\tthis.currentBlockMessageIndex = 0;\n\t\tthis.currentSelection = _data[\"status\"];\n\t\tthis.processNextMessage();\n\t}\n\n\t// Processes the chat block, push all the chat messages\n\tprivate processNextMessage(){\n\t\tif( this.currentBlockMessages != null && this.currentBlockMessages.length > 0 ){\n\t\t\tif ( this.currentBlockMessageIndex >= this.currentBlockMessages.length){\n\t\t\t\t// Time to show the subjects and return\n\t\t\t\tconsole.log(\"currentSelection :: \"+this.currentSelection);\n\t\t\t\tif( this.currentSelection == 1 ){\n\t\t\t\t\tif( this.chatbotActions != null && this.chatbotActions.length > 0 ){\n\t\t\t\t\t\t// showExitMessage();\n\t\t\t\t\t\tconsole.log(\"ShowExitMessage\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( this.currentSelection == 2 ){\n\t\t\t\t\tthis.showWave = true;\n\t\t\t\t\tthis.showSubjects();\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// This may mean that the conversation may have ended\n\t\t\t\t\t// this.showEndConversation();\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.showWave = true;\n\t\t\t// Lets add the message\n\t\t\tconsole.log(\"Looking up message number \"+this.currentBlockMessageIndex);\n\t\t\tlet blockMessage = this.currentBlockMessages[this.currentBlockMessageIndex];\n\t\t\tblockMessage.sender = 1;\n\t\t\tblockMessage.message_id = Date.now();\n\t\t\tconsole.log(blockMessage);\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.chatMessages.push(blockMessage);\n\t\t\t\tthis.showWave = false;\n\t\t\t\tthis.currentBlockMessageIndex++;\n\t\t\t\tif( !blockMessage.hasOwnProperty(\"form\") )\n\t\t\t\t\tthis.processNextMessage();\n\t\t\t\telse{\n\t\t\t\t\tif( blockMessage[\"type\"] == \"3\" ){\n\t\t\t\t\t\tif( blockMessage[\"subtype\"] == \"51\" ){\n\t\t\t\t\t\t\tthis.currentInput = blockMessage[\"form\"][0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if( blockMessage[\"subtype\"] == \"52\" ){\n\t\t\t\t\t\t\tlet choice = blockMessage[\"form\"][0];\n\t\t\t\t\t\t\tlet _options = choice.options.split(\":\");\n\t\t\t\t\t\t\tfor( let _option of _options ){\n\t\t\t\t\t\t\t\tvar route = { block_route_id: 0, type: choice.type, title: _option, response_label: choice.id };\n\t\t\t\t\t\t\t\tthis.chatbotActions.push(route);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if( blockMessage[\"subtype\"] == \"53\" ){\n\t\t\t\t\t\t\tthis.currentInput = blockMessage[\"form\"][0];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.scrollPageToBottom();\n\t\t\t}, blockMessage.showafter);\n\t\t}\n\t\telse{\n\t\t\t// Time to show exit message or subjects\n\t\t\tthis.scrollPageToBottom();\n\t\t}\n\t}\n\n\t// Show the subjects\n\tprivate showSubjects(){\n\t\t// console.log(\"showSubjects\");\n\t\tvar message = { type: \"-1\", title: \"What goals are you planning for?\" };\n\t\tsetTimeout(()=>{\n\t\t\tthis.showWave = false;\n\t\t\tthis.chatMessages.push(message);\n\t\t\t// Show the actions\n\t\t\tfor(let subject of this.subjects){\n\t\t\t\tvar route = { block_route_id: subject.subject_id, type: '101', title: subject.subject_title };\n\t\t\t\tthis.chatbotActions.push(route);\n\t\t\t}\n\t\t\tthis.scrollPageToBottom();\n\t\t}, 500);\n\t}\n\n\tprivate optionClick(chatbotAction: any){\n\t\t// console.log(\"Route clicked\");\n\t\tif( chatbotAction.type == '101' ){\n\t\t\t// Subject was selected\n\t\t\tthis.postSubjectSelection(chatbotAction);\n\t\t}\n\t\telse if( chatbotAction.type == '102' ){\n\t\t}\n\t\telse if( chatbotAction.type == '52' ){\n\t\t\t// route was selected\n\t\t\t// console.log(\"some sort of a route clicked\");\n\t\t\t// console.log(chatbotAction);\n\t\t\tthis.postFormResponse(chatbotAction.title, chatbotAction.response_label);\n\t\t}\n\t}\n\n\tprivate postSubjectSelection(chatbotAction: any){\n\t\tthis.resetBlocks();\n\t\tthis.showMyResponse(chatbotAction.title, null);\n\t\tconsole.log(\"Sending this data \");\n\t\t// console.log(chatbotAction);\n\t\tthis.chatProvider.postSubjectSelection(this.customerCode, this.botCode, this.apiEndpoint, chatbotAction.block_route_id).then(data=>{\n\t\t\tconsole.log(\"Subject response data\");\n\t\t\tconsole.log(data);\n\t\t\tthis.extractResponse(data);\n\t\t});\n\t}\n\n\tprivate postFormResponse(value: string, key: string){\n\t\tthis.chatbotActions = [];\n\t\tconsole.log(\"posting form choice\");\n\t\tthis.showMyResponse(value, key);\n\t\tthis.processNextMessage();\n\t}\n\n\tprivate postInputData(){\n\t\tconsole.log(\"posting input data\");\n\t\tconsole.log(this.currentInputResult);\n\t\tthis.postFormResponse(this.currentInputResult, this.currentInput.id);\n\t\tthis.currentInput = null;\n\t}\n\n\t// --------------------------\n\tprivate showMyResponse(myResponse: string, responseLabel: string){\n\t\tthis.chatMessages.push({ title: myResponse, label: responseLabel, type: 1, sender: 2 });\n        this.scrollPageToBottom();\n\t}\n\n\tprivate scrollPageToBottom(){\n\t\tsetTimeout(()=>{\n\t\t\tthis.contentArea.scrollToBottom();\n\t\t}, 50);\n\t}\n}\n"]}